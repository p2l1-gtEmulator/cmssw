
cond_{{condition_name}} : entity work.p2gt_tripleObjCond
generic map(

  {% if (objects_first == objects_second) and (objects_first != objects_third) and (objects_second != objects_third) %}
  coll_correl     => SAME12,
  {% elif (objects_first != objects_second) and (objects_first == objects_third) and (objects_second != objects_third) %}
  coll_correl     => SAME13,
  {% elif (objects_first != objects_second) and (objects_first != objects_third) and (objects_second == objects_third) %}
  coll_correl     => SAME13,
  {% elif (objects_first == objects_second) and (objects_first == objects_third) and (objects_second == objects_third) %}
  coll_correl     => SAME123,
  {%- else %}
  coll_correl     => DIFFERENT,
  {%- endif %}
  {% for key, value in cuts.items() +%}
  {% if value.hwcut[0] is sameas true or value is sameas false %}
  {{key}}         => {{value.hwcut | replace("[","(") | replace("]",")")| lower }}   {% if not loop.last %},{% endif %} --Physical value: {{value.physcut}}

  {%- else %}
  {{key}}         => {{value.hwcut | replace("[","(") | replace("]",")")}}, -- Physical value: {{value.physcut}}
  {{key}}_enabled => {{value.enablecut | replace("[","(") | replace("]",")")| lower }}  {% if not loop.last %},{% endif %}

  {%- endif %}
  {%- endfor +%}
)
port map(
  clk           => clk, -- ipbus signals
  rst           => rst,
  ipb_in        => ipb_in,
  ipb_out       => open,
  clk_algo      => clk_algo,
  rst_algo      => rst_algo,
  objects_valid => objects_valid,
  object1       => objects({{objects_first}}),
  {% if objects_first != objects_second %}
  object2       => objects({{objects_second}}),
  {% endif %}
  {% if (objects_second != objects_third) and (objects_first != objects_third) %}
  object3       => objects({{objects_third}}),
  {% endif %}
  algo_bit_out  => {{algo_bit_name}} 
);


